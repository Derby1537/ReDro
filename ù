use std::collections::HashMap;

use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Debug)]
pub struct ControllerConfig {
    mappings: HashMap<String, String>,
    sensitivity: HashMap<String, f64>
}

impl Default for ControllerConfig {
    fn default() -> Self {
        let mut mappings = HashMap::new();
        mappings.insert("throttle".to_string(), "RightTrigger2".to_string());
        mappings.insert("yawLeft".to_string(), "leftTrigger".to_string());
        mappings.insert("yawRight".to_string(), "RightTrigger".to_string());
        mappings.insert("roll".to_string(), "LeftStickX".to_string());
        mappings.insert("pitch".to_string(), "LeftStickY".to_string());

        let mut sensitivity = HashMap::new();
        sensitivity.insert("throttle".to_string(), 1.);

    }
}


